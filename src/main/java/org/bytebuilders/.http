### Signup Request
POST http://localhost:8080/signup
Content-Type: application/json

{
  "email": "",
  "password": "",
  "homeAddress": "",
  "role": ""
}

###Login Request
POST http://localhost:8080/login
Content-Type: application/json

{
  "email": "",
  "password": ""
}

### Generate OTP
POST http://localhost:8080/generateOtp
Content-Type: application/json

{
  "visitorName": "",
  "residentEmail": ""
}

### Validate OTP
POST http://localhost:8080/security/validateOtp
Content-Type: application/json

{
  "otp": ""
}


### close account
POST http://localhost:8080/admin/closeAccount
Content-Type: application/json

{
  "userId": ""
}

### activate account
POST http://localhost:8080/admin/activateAccount
Content-Type: application/json

{
  "userId": ""
}


### Get All Residents
GET http://localhost:8080/admin/viewResidents
Accept: application/json

###View resident by id
POST http://localhost:8080/admin/viewResidentById
Content-Type: application/json

{
  "residentId": ""
}

### get all security personnel
GET http://localhost:8080/admin/getAllSecurityPersonnel


### get security by id
POST http://localhost:8080/admin/getSecurityPersonnelById
Content-Type: application/json

{
  "id": ""
}

### get all admins
GET http://localhost:8080/admin/getAllAdmins

### get admins by id
GET http://localhost:8080/admin/getAdminById
Content-Type: application/json

{
  "id": ""
}


### view all visitors
GET http://localhost:8080/admin/viewAllVisitors

### view visitors by otplog id
POST http://localhost:8080/admin/viewVisitorByOtpId
Content-Type: application/json

{
  "otpId": ""
}

### close account
POST http://localhost:8080/api/admin/closeAccount
Content-Type: application/json

{
  "userId": "67d234933a5e5049bfa84c17"
}

###view visitor pass by phone number
POST http://localhost:8080/api/admin/getVisitorPassByPhoneNumber
Content-Type: application/json

{
  "phoneNumber": "09012345678"
}

### view all visitors
GET http://localhost:8080/api/admin/viewAllVisitorPass







###  return roleServices.getOrDefault(user.getRole(), ()-> {throw new IllegalArgumentException("Role does not exist");});
